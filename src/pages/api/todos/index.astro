---
export const partial = true;
import { db, Tasks, like } from 'astro:db';
import Task from '@/components/Task.astro';
import { nanoid } from 'nanoid';

const method = Astro.request.method;
// console.log(method);

const id = Astro.url.searchParams.get('id');
// console.log(id);

async function getTodo(id: string) {
  return await db
    .select()
    .from(Tasks)
    .where(like(Tasks.id, `%${id}%`))
    .get();
}
async function getText() {
  const formData = await Astro.request.formData();
  return formData.get('text');
}
let todo, text;

switch (method) {
  // add new task
  case 'POST':
    text = await getText();
    const newTodo = { id: nanoid(), text } as unknown as Task;

    await db.insert(Tasks).values(newTodo);
    break;
  // update task
  case 'PUT':
    text = await getText();
    await db
      .update(Tasks)
      .set({ text: `${text}` })
      .where(like(Tasks.id, `%${id}%`));
    todo = id && (await getTodo(id));
    break;
  // get text of task
  default:
    if (id === null) return;
    todo = await getTodo(id);
    break;
}

// console.log(todo);
---

{
  method === 'GET' && todo ? (
    <Task todo={todo} mode="edit" />
  ) : (
    <Task todo={todo} />
  )
}
